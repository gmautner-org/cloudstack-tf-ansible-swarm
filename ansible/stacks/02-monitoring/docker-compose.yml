# Adaptado de https://github.com/stefanprodan/dockprom e https://github.com/grafana/loki-fundamentals/blob/fluentbit-official/docker-compose.yml
# Acompanhe commits deste reposit√≥rio para atualizar imagens
# Dashboards adicionais copiados de https://github.com/portainer/templates/tree/master/images/monitoring/grafana/config/dashboards
version: '3.8'

networks:
  monitor-net:
    external: true
  traefik_network:
    external: true

volumes:
    prometheus_data: {}
    grafana_data: {}
    flb-state: {}
    loki_data: {}

configs:
  fluent_bit_v1_conf:
    file: ./fluent-bit-config/fluent-bit-v1.conf
  fluent_bit_v1_parsers:
    file: ./fluent-bit-config/parsers-v1.conf

services:

  prometheus:
    image: prom/prometheus:v3.4.2
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitor-net
      - traefik_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.system == monitoring
      labels:
        - traefik.enable=true
        - traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN_SUFFIX}`)
        - traefik.http.routers.prometheus.entrypoints=websecure
        - traefik.http.routers.prometheus.tls.certresolver=letsencrypt
        - traefik.http.services.prometheus.loadbalancer.server.port=9090
        - traefik.http.routers.prometheus.middlewares=basic-auth@swarm

  alertmanager:
    image: prom/alertmanager:v0.28.1
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitor-net
      - traefik_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.system == monitoring
      labels:
        - traefik.enable=true
        - traefik.http.routers.alertmanager.rule=Host(`alertmanager.${DOMAIN_SUFFIX}`)
        - traefik.http.routers.alertmanager.entrypoints=websecure
        - traefik.http.routers.alertmanager.tls.certresolver=letsencrypt
        - traefik.http.services.alertmanager.loadbalancer.server.port=9093
        - traefik.http.routers.alertmanager.middlewares=basic-auth@swarm

  nodeexporter:
    image: prom/node-exporter:v1.9.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitor-net
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    networks:
      - monitor-net
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: grafana/grafana:12.0.2
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitor-net
      - traefik_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.system == monitoring
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN_SUFFIX}`)
        - traefik.http.routers.grafana.entrypoints=websecure
        - traefik.http.routers.grafana.tls.certresolver=letsencrypt
        - traefik.http.services.grafana.loadbalancer.server.port=3000

  pushgateway:
    image: prom/pushgateway:v1.11.0
    networks:
      - monitor-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.system == monitoring

  fluentbit:
    image: fluent/fluent-bit:4.0
    command: ["-c", "/fluent-bit/etc/fluent-bit.conf"]
    networks:
      - monitor-net
    deploy:
      mode: global
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - flb-state:/fluent-bit/state
    configs:
      - source: fluent_bit_v1_conf
        target: /fluent-bit/etc/fluent-bit.conf
      - source: fluent_bit_v1_parsers
        target: /fluent-bit/etc/parsers.conf

  loki:
    image: grafana/loki:3.5
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitor-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.system == monitoring
