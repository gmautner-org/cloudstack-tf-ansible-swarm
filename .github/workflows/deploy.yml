name: Deploy Infrastructure

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        env:
          CLOUDSTACK_API_KEY: ${{ secrets.CLOUDSTACK_API_KEY }}
          CLOUDSTACK_API_URL: ${{ secrets.CLOUDSTACK_API_URL }}
          CLOUDSTACK_SECRET_KEY: ${{ secrets.CLOUDSTACK_SECRET_KEY }}
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        env:
          CLOUDSTACK_API_KEY: ${{ secrets.CLOUDSTACK_API_KEY }}
          CLOUDSTACK_API_URL: ${{ secrets.CLOUDSTACK_API_URL }}
          CLOUDSTACK_SECRET_KEY: ${{ secrets.CLOUDSTACK_SECRET_KEY }}
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Set up Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible
          ansible-galaxy collection install -r ansible/collections/requirements.yml

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/cluster-1
          chmod 600 ~/.ssh/cluster-1
          ssh-keyscan -H $(cd terraform && terraform output -json instance_ips | jq -r '.[]') >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        env:
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
        run: ansible-playbook -i inventory.yml playbook.yml
        working-directory: ./ansible
